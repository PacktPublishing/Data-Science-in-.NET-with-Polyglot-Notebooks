#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!markdown

# Chapter 5

#!csharp

#r "nuget:Microsoft.Data.Analysis,0.21.1"

#!csharp

using Microsoft.Data.Analysis;

DataFrame df = DataFrame.LoadCsv("JoinedStats.csv");

df.Head(5)

#!markdown

## Descriptive Statistics

#!csharp

df.Info()

#!csharp

df.Description()

#!csharp

df["minutes_played"].Info()

#!csharp

df["minutes_played"].Description()

#!csharp

#r "nuget:MathNet.Numerics,5.0.0"

#!csharp

using MathNet.Numerics.Statistics;

#!markdown

See documentation at https://numerics.mathdotnet.com/DescriptiveStatistics

#!csharp

SingleDataFrameColumn colValue = (SingleDataFrameColumn)df["market_value_in_eur"];
float?[] floatValues = colValue.ToArray();
double[] doubleValues = floatValues.Where(f => f is not null)
                                   .Select(f => (double)f)
                                   .OrderBy(f => f)
                                   .ToArray();
doubleValues

#!csharp

DescriptiveStatistics stats = new(doubleValues);
stats

#!markdown

## Data Visualization

#!csharp

#r "nuget:ScottPlot,5.0.25"

#!csharp

using ScottPlot;

#!csharp

// Setup a custom formatter to display plots as images
using Microsoft.DotNet.Interactive.Formatting;
Formatter.Register(typeof(ScottPlot.Plot), (p, w) => 
    w.Write(((ScottPlot.Plot)p).GetImageHtml(600, 400)), HtmlFormatter.MimeType);

#!csharp

#r "nuget:Plotly.NET,4.2.0"

#!csharp

#r "nuget:Plotly.NET.CSharp,0.11.1"

#!csharp

#r "nuget: Plotly.NET.Interactive,4.2.1"

#!markdown

## Univariate Analysis

#!markdown

### Box Plot

#!csharp

var plot = new ScottPlot.Plot();

plot.Add.Box(new Box() {
    WhiskerMax = doubleValues.Max(),
    BoxMax = SortedArrayStatistics.UpperQuartile(doubleValues),
    BoxMiddle = SortedArrayStatistics.Median(doubleValues),
    BoxMin = SortedArrayStatistics.LowerQuartile(doubleValues),
    WhiskerMin = doubleValues.Min(),
});

plot.Title("Player Market Value Distribution");
plot.Axes.SetLimitsY(0, 100_000_000);

plot

#!csharp

using Plotly.NET.CSharp;

var box = Chart.BoxPlot<double, double, string>(X: doubleValues)
               .WithTraceInfo(Name: "Money");

box

#!markdown

### Histogram

#!markdown

## Multivariate Analysis

#!markdown

### Bar Chart

#!markdown

### Scatter Plot

#!markdown

## Scenarios

#!markdown

### Colors

#!markdown

### Facets
