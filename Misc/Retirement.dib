#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!csharp

#r "nuget:Microsoft.Data.Analysis"

#!csharp

using Microsoft.Data.Analysis;

DataFrame df_appearances = DataFrame.LoadCsv("../data/original/appearances.csv");

df_appearances.Head(5)

#!csharp

DataFrame df_games = DataFrame.LoadCsv("../data/original/games.csv", guessRows: 20);

df_games.Head(5)

#!csharp

// Filter out columns we don't want for merging
foreach (var col in df_games.Columns.ToList()) {
    if (col.Name == "game_id" || col.Name == "season") continue;
    df_games.Columns.Remove(col);
}
df_games.Head(5)

#!csharp

DataFrame df_game_appearances = df_appearances.Merge<int>(df_games, leftJoinColumn: "game_id", rightJoinColumn: "game_id", leftSuffix: "");
df_game_appearances.Columns.Remove("game_id_right");
df_game_appearances.Head(5)

#!csharp

// Let's add a count of games so we can sum it later
df_game_appearances["games"] = new Int32DataFrameColumn("games", Enumerable.Repeat<int>(1, (int)df_game_appearances.Rows.Count))

#!csharp

// DataFrame doesn't allow multi-level grouping yet, so we'll composite the player and season into a single column
IEnumerable<string> keys = df_game_appearances.Rows.Select(a => a["player_id"] + "_" + a["season"]);
df_game_appearances.Columns.Add(new StringDataFrameColumn("player_season", keys));

df_game_appearances.Head(5)

#!csharp

DataFrame df_grouped = df_game_appearances.GroupBy("player_season").Sum(["yellow_cards", "red_cards", "goals", "assists", "minutes_played", "games"]);
df_grouped.Head(5)

#!csharp

IEnumerable<int> ids = df_grouped.Rows.Select(a => int.Parse(a["player_season"].ToString().Split('_')[0]));
df_grouped["player_id"] = new Int32DataFrameColumn("player_id", ids)

#!csharp

IEnumerable<int> seasons = df_grouped.Rows.Select(a => int.Parse(a["player_season"].ToString().Split('_')[1]));
df_grouped["season"] = new Int32DataFrameColumn("season", seasons)

#!csharp

df_grouped = df_grouped.OrderBy("player_season");
df_grouped.Columns.Remove("player_season");
df_grouped.Head(5)

#!csharp

DataFrame.SaveCsv(df_grouped, "../data/season_stats.csv")
