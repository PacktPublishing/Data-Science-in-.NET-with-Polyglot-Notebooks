#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

#r "nuget:Microsoft.Data.Analysis"

#!csharp

using Microsoft.Data.Analysis;

DataFrame df = DataFrame.LoadCsv("../data/original/players.csv");

df.Head(5)

#!csharp

DataFrame dfClubs = DataFrame.LoadCsv("../data/original/clubs.csv");

dfClubs.Head(5)

#!csharp

StringDataFrameColumn competition = (StringDataFrameColumn)dfClubs["domestic_competition_id"];
competition.ValueCounts()

#!csharp

// British Premier League
dfClubs = dfClubs.Filter(dfClubs["domestic_competition_id"].ElementwiseEquals("GB1"));
dfClubs.Head(5)

#!csharp

df.Info()

#!csharp

df.Description()

#!csharp

df["position"].DataType

#!csharp

IEnumerable<string> sDC = df["position"] as StringDataFrameColumn;
sDC.Distinct()

#!csharp

df["height_in_cm"].Description()

#!csharp

df["position"].ValueCounts()

#!csharp

DataFrame.SaveCsv(df, "../data/original/test_out.csv");

#!csharp

#r "nuget:ScottPlot"
#r "nuget:SkiaSharp.NativeAssets.Linux.NoDependencies"

#!csharp

using System.Linq;

T[] GetArrayFromColumn<T>(DataFrameColumn column) {
    ArgumentNullException.ThrowIfNull(column);
    
    long length = column.Length;
    IEnumerable<T> values = column[0, (int)(length - 1)].Cast<T>();

    return values.ToArray();
}

#!csharp

float?[] dataX = GetArrayFromColumn<float?>(df["height_in_cm"]);
float?[] dataY = GetArrayFromColumn<float?>(df["market_value_in_eur"]);

#!csharp

// Setup a custom formatter to display plots as images
using Microsoft.DotNet.Interactive.Formatting;
Formatter.Register(typeof(ScottPlot.Plot), (p, w) => 
    w.Write(((ScottPlot.Plot)p).GetImageHtml(400, 300)), HtmlFormatter.MimeType);

#!csharp

using ScottPlot;

Plot plt = new();
var point = plt.Add.Markers(dataX, dataY);
point.MarkerSize = 3.5f;

plt.XLabel("Foreigners %");
plt.YLabel("Foreigners #");
plt.Title("Team Composition of Foreign Players");
plt
